
HOW TO BUILD THE CODE
---------------------

1. make sure you have kernel sources/headers matching your installed system

2. do the following
	make clean; make KSRC=/usr/src/linux-kernel-source-or-headers
   this produces ./netmap_lin.ko and other kernel modules.

3. to build sample applications, run
	(cd ../examples; make )
   (you will need the pthreads and libpcap-dev packages to build them)

   
HOW TO USE THE CODE
-------------------

1. unload any modules for the network cards you want to use, e.g.
	sudo rmmod ixgbe
	sudo rmmod e1000
	...

2. load netmap and device driver module
	sudo insmod ./netmap_lin.ko
	sudo insmod ./ixgbe/ixgbe.ko
	sudo insmod ./e1000/e1000.ko
	...

3. turn the interface(s) up

	sudo ifconfig eth0 up # and same for others

4. Run test applications -- as an example, pkt-gen is a raw packet
   sender/receiver which can do line rate on a 10G interface

	# send about 500 million packets of 60 bytes each.
	# wait 5s before starting, so the link can go up
	sudo pkt-gen -i eth0 -f tx -n 500111222 -l 60 -w 5
	# you should see about 14.88 Mpps

	sudo pkt-gen -i eth0 -f rx # act as a receiver


COMMON PROBLEMS
----------------

* switching in/out of netmap mode causes the link to go down and up.
  If your card is connected to a switch with spanning tree enabled,
  the switch will likely MUTE THE LINK FOR 10 SECONDS while it is
  detecting the new topology. Either disable the spanning tree on
  the switch or use long pauses before sending data;

* Not all cards can do line rate no matter how fast is your software or
  CPU. Several have hardware limitations that prevent reaching the peak
  speed, especially for small packet sizes. Examples:

  - ixgbe cannot receive at line rate with packet sizes that are
    not multiple of 64 (after CRC stripping).
    This is especially evident with minimum-sized frames (-l 60 )

  - some of the low-end 'e1000' cards can send 1.2 - 1.3Mpps instead
    of the theoretical maximum (1.488Mpps)

  - the 'realtek' cards seem unable to send more than 450-500Kpps
    even though they can receive at least 1.1Mpps

* if the link is not up when the packet generator starts, you will
  see frequent messages about a link reset. While we work on a fix,
  use the '-w' argument on the generator to specify a longer timeout

* the ixgbe driver (and perhaps others) is severely slowed down if the
  remote party is senting flow control frames to slow down traffic.
  If that happens try to use the ethtool command to disable flow control.

